version: '3.3'

services:
  db:
    container_name: database
    image: postgres
    env_file:
      - ".env"
    environment:
      POSTGRES_PASSWORD: $DB_PASS
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    restart: always
    ports:
     - 5432:5432
    networks:
      - tg_bot
    volumes:
      - ./postgresql:/var/lib/postgresql

  bot:
    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
    stop_signal: SIGINT
    volumes:
      - ./media:/src/media
    build:
      context: .
    command: poetry run python bot.py
    restart: always
    env_file:
      - ".env"
    networks:
      - tg_bot
    depends_on:
      - db
      - django
  
  django:
    container_name: djangoproject
    build:
      context: .
    volumes:
      - ./media:/src/media
    command: bash -c "poetry run python manage.py makemigrations && poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000 --noreload"
    ports:
      - 8000:8000
    networks:
      - tg_bot
    restart: always
    env_file:
      - ".env"
    depends_on:
      - db


networks:
  tg_bot:
    driver: bridge